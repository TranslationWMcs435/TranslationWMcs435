Espresso Limitations

Espresso does not work when there are multiple views with identical data. This data is the data grabbed from UiAutomatorViewer and is 
	used to differentiate different views from each other. The problem is that often, especially when there are views that are 
	generated by the Android system, like increment buttons for date pickers, buttons with similar functionality have the same data,
	so Espresso cannot tell which view it should interact with. To try to get around this, when the EspressoTranslator sees an
	android id, meaning it is not in the R file of the app package it matches the view by text instead. This does not fix all the
	problems since many times, views with identical data have the same text, or in most of what we have seen identical images for
	image buttons.

Espresso's withContentDescription works very rarely. Sometimes it works and other times it does not. In our testing it has only worked a 
	few times on a physical device, but has never worked on the emulators.

JSON file does not contain enough information:
	-scollTo() only works on ScrollView, so when a view is not visible and needs to be scrolled to, there is no way to 
	know if that item is off screen or in a ScrollView so scrollTo() cannot be used otherwise the program breaks. In popup 
	listviews, onData() automatically scrolls to the item if it is not in view.  

When using onData() it does not work with string representations of Integers. It cannot recognize popup listview items that are 
	have numbers only for text.

The Espresso API only supports swiping up, down, left, and right. It does not natively support diagonal swipes. To do a diagonal swipe 
	you have to make a custom swipe which is a problem since the Translation Engine is only supposed to generate code in Espresso 
	that can be run on any device. So unless a whole method is written into the output file with the Espresso test case, swipes other
	than up, down, left, or right swipes cannot be done.
