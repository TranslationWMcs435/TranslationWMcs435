Nathan Chen
Translation Engine Group

Sources and extra help:
	http://uiautomator.blogspot.com/search/label/UiAutomator
	https://looksok.wordpress.com/2014/02/08/uiautomator-in-eclipse/
	I found the first of the above to be more helpful.

UIAUTOMATOR TEST SETUP

1. Create new Java Project
	-name it anything you want

2. Add the JUnit library to the project
	-go to where you configure the build path
	-in the Libraries tab, click "Add Library..."
	-select JUnit and then JUnit3
	-click finish and then apply

3. Add the UIAutomator library
	-go to where you configure the build path
	-click "Add External JARs..."
	-navigate to your Android sdk folder, then navigate to "platforms"
	-navigate to your Android api, must be 19 or higher to use UIAutomator
	-add both the android.jar and uiautomator.jar

RUNNING UIAUTOMATOR TESTS

1. Create the test project build configuration
	-in the Command Prompt or equivalent navigate to your Android SDK then tools.
	-issue the command "android create uitest-project -n -t -p" where:
		-n is the project name parameter
		-p is the path to the project parameter
		-t is the target installed on your system
	-to get the targets for -t, issue the command "android list targets"
		-choose the highest id installed, find the id number and that is your parameter for -t
	-After doing the above a build.xml file should have been created in the folder for your test project

2. Build the project with ant
	-now navigate to the directory for your test project in the Command Prompt
	-issue the command "ant build"
		-to do this you must have Apache Ant installed
			-you can get it from http://ant.apache.org/bindownload.cgi
			-you must also set your environment variables to be able to use it in the Command Prompt
			-also make sure in the environment variables that your JAVA_HOME points to the JDK installation and not the JRE

3. Push the test to your device
	-to do this you must have an AVD open or a physical Android device connected.
	-navigate to "platform-tools" in your Android SDK directory
	-issue the command "adb push ____ ____"
		-the first blank is the path to the jar that was created when the "ant build" command was issued, this jar will be in the bin folder of the directory of your test project
		-the second blank is the location where you want the jar to be pushed on the device, I use "/data/local/tmp/"

4. Run the test
	-issue the command "adb shell uiautomator runtest ____ -c ____"
		-the first blank is the jar that you pushed to the device, so if the jar was blah.jar you would type blah.jar there
		-the second blank is the class name where the test code is located, so if your class beep is at com.example.Beep then you would type com.example.Beep there. If you just have your test class in a default package then just type the class name, so just Beep
	-IMPORTANT NOTE: Make sure that the names of all your test methods in your test class begin with "test" otherwise it will not be seen and thus will not be run. So I can have "test_click_this" or "testClickThis", but I cannot have "click_this_test" nor "clickThisTest" nor "clickTestThis".
